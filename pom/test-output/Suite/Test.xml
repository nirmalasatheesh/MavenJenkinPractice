<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="compaq-PC" ignored="4" name="Test" tests="3" failures="1" timestamp="28 Dec 2017 10:36:44 GMT" time="105.976" errors="0">
  <testcase name="@BeforeMethod beforeMethod" time="101.997" classname="wdMethods.ProjectMethods">
    <failure type="java.lang.RuntimeException" message="FAILED">
      <![CDATA[java.lang.RuntimeException: FAILED
	at utils.Reporter.reportStep(Reporter.java:34)
	at wdMethods.SeMethods.locateElement(SeMethods.java:75)
	at wdMethods.ProjectMethods.beforeMethod(ProjectMethods.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="101.999" classname="wdMethods.ProjectMethods">
    <failure type="java.lang.RuntimeException" message="FAILED">
      <![CDATA[java.lang.RuntimeException: FAILED
	at utils.Reporter.reportStep(Reporter.java:34)
	at wdMethods.SeMethods.locateElement(SeMethods.java:75)
	at wdMethods.ProjectMethods.beforeMethod(ProjectMethods.java:37)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="wdMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="wdMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="wdMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeClass setValues" time="0.0" classname="pagetests.CreateLead">
    <skipped/>
  </testcase> <!-- @BeforeClass setValues -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="wdMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeClass setValues" time="0.0" classname="pagetests.EditLead">
    <skipped/>
  </testcase> <!-- @BeforeClass setValues -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="wdMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="wdMethods.ProjectMethods">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="deleteLead" time="0.0" classname="pagetests.DeleteLead">
    <skipped/>
  </testcase> <!-- deleteLead -->
  <testcase name="deleteLead" time="0.0" classname="pagetests.DeleteLead">
    <skipped/>
  </testcase> <!-- deleteLead -->
  <testcase name="editLead" time="0.0" classname="pagetests.EditLead">
    <failure type="org.testng.TestNGException" message="
Data Provider public java.lang.Object[][] wdMethods.ProjectMethods.getData() must return either Object[][] or Object[] or Iterator&amp;lt;Object[]&amp;gt; or Iterator&amp;lt;Object&amp;gt;, not class [[Ljava.lang.Object;">
      <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.Object[][] wdMethods.ProjectMethods.getData() must return either Object[][] or Object[] or Iterator<Object[]> or Iterator<Object>, not class [[Ljava.lang.Object;
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
... Removed 13 stack frames]]>
    </failure>
  </testcase> <!-- editLead -->
  <testcase name="@BeforeTest beforeTest" time="0.0" classname="wdMethods.ProjectMethods">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase name="@AfterTest afterTest" time="0.0" classname="wdMethods.ProjectMethods">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase name="@BeforeSuite beforeSuite" time="0.0" classname="wdMethods.ProjectMethods">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="wdMethods.ProjectMethods">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
</testsuite> <!-- Test -->
